{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nconst logger = createLogger();\nconst saga = createSagaMiddleware();\nlet middlewares = [saga];\nmiddlewares = [...middlewares, logger]; // const store = configureStore({ reducer: rootReducer });\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares\n});\nsaga.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","createLogger","rootReducer","rootSaga","logger","saga","middlewares","store","reducer","middleware","run"],"sources":["/Users/shankaraswal/PROJECTS/WORK/shoping-cart/src/store/index.ts"],"sourcesContent":["import { applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst logger = createLogger();\nconst saga = createSagaMiddleware();\nlet middlewares = [saga];\nmiddlewares = [...middlewares, logger];\n\n// const store = configureStore({ reducer: rootReducer });\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares,\n});\n\nsaga.run(rootSaga);\n\nexport default store;\n"],"mappings":"AACA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;AACA,MAAMI,IAAI,GAAGL,oBAAoB,EAAjC;AACA,IAAIM,WAAW,GAAG,CAACD,IAAD,CAAlB;AACAC,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBF,MAAjB,CAAd,C,CAEA;;AAEA,MAAMG,KAAK,GAAGR,cAAc,CAAC;EAC3BS,OAAO,EAAEN,WADkB;EAE3BO,UAAU,EAAEH;AAFe,CAAD,CAA5B;AAKAD,IAAI,CAACK,GAAL,CAASP,QAAT;AAEA,eAAeI,KAAf"},"metadata":{},"sourceType":"module"}